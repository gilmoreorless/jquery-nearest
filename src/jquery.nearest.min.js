/*!
 * jQuery Nearest plugin v1.3.1
 *
 * Finds elements closest to a single point based on screen location and pixel dimensions
 * http://gilmoreorless.github.io/jquery-nearest/
 * Copyright (c) 2011-2015 Gilmore Davidson under the MIT licence:
 *   http://gilmoreorless.github.io/jquery-nearest/LICENSE.txt
 *
 * Requires jQuery 1.4 or above
 * Also supports Ben Alman's "each2" plugin for faster looping (if available)
 */
!(function(e,t){function r(t,r,i){t||(t="div");var s=e(r.container),o=s.offset()||{left:0,top:0},u=[s.width()||0,s.height()||0],a={x:[o.left,o.left+u[0]],y:[o.top,o.top+u[1]],w:[0,u[0]],h:[0,u[1]]},f,l,c;for(f in a)if(a.hasOwnProperty(f)){c=n.exec(r[f]);if(c){l=a[f];r[f]=(l[1]-l[0])*c[1]/100+l[0]}}if(r.sameX===false&&r.checkHoriz===false){r.sameX=!r.checkHoriz}if(r.sameY===false&&r.checkVert===false){r.sameY=!r.checkVert}var h=s.find(t),p=[],d=!!r.furthest,v=!r.sameX,m=!r.sameY,g=!!r.onlyX,y=!!r.onlyY,b=d?0:Infinity,w=parseFloat(r.x)||0,E=parseFloat(r.y)||0,S=parseFloat(w+r.w)||w,x=parseFloat(E+r.h)||E,T=parseFloat(r.tolerance)||0,N=!!e.fn.each2,C=!!r.sortMinDist,k=Math.min,L=Math.max;if(!r.includeSelf&&i){h=h.not(i)}if(T<0){T=0}h[N?"each2":"each"](function(t,n){var r=N?n:e(this),i=r.offset(),s=i.left,o=i.top,u=r.outerWidth(),a=r.outerHeight(),f=s+u,l=o+a,c=L(s,w),h=k(f,S),A=L(o,E),O=k(l,x),M=h>=c,_=O>=A,D,P,H,B;if(v&&m||!v&&!m&&M&&_||v&&_||m&&M||v&&g||m&&y){D=M?0:c-h;P=_?0:A-O;if(g||y){H=g?D:P}else{H=M||_?L(D,P):Math.sqrt(D*D+P*P)}B=d?H>=b-T:H<=b+T;if(B){b=d?L(b,H):k(b,H);p.push({node:this,dist:H})}}if(C){p.sort(function(e,t){return e.dist-t.dist})}});var A=p.length,O=[],M,_,D,P;if(A){if(d){M=b-T;_=b}else{M=b;_=b+T}for(D=0;D<A;D++){P=p[D];if(P.dist>=M&&P.dist<=_){O.push(P.node)}}}return O}var n=/^([\d.]+)%$/;e.each(["nearest","furthest","touching"],function(n,i){var s={x:0,y:0,w:0,h:0,tolerance:1,container:document,furthest:i=="furthest",includeSelf:false,sameX:i==="touching",sameY:i==="touching",onlyX:false,onlyY:false};e[i]=function(n,i,o){if(!n||n.x===t||n.y===t){return e([])}var u=e.extend({},s,n,o||{});return e(r(i,u))};e.fn[i]=function(t,n){if(!this.length){return this.pushStack([])}var i;if(t&&e.isPlainObject(t)){i=e.extend({},s,t,n||{});return this.pushStack(r(this,i))}var o=this.offset(),u={x:o.left,y:o.top,w:this.outerWidth(),h:this.outerHeight()};i=e.extend({},s,u,n||{});return this.pushStack(r(t,i,this))}})})(jQuery);
